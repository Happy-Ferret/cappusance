This is the Cappuccino port of GNUstep Renaissance.
See <http://www.gnustep.it/Renaissance/> for the original GNUstep Renaissance documentation.

You can write the GUI including (KVO) bindings in XML markup. Cappusance comes with powerful autolayout capabilities.
See Slider<->Textview example on <http://aug-fancy.ukl.uni-freiburg.de/NewApplication/>

I recently included Fireside, a lightweight RESTful ORM mapper to allow painless database-to-GUI mapping in the spirit of EOF/WebObjects.


usage:
@import <Renaissance/Renaissance.j>
[...]
- (void) applicationDidFinishLaunching:(CPNotification)aNotification
{	store=[[FSStore alloc] initWithBaseURL: "http://127.0.0.1:3000"];
	[CPBundle loadRessourceNamed: "gui.gsmarkup" owner:self];
}

example markup:

<?xml version="1.0"?>
<!DOCTYPE gsmarkup>
<gsmarkup>

<objects>
  <window title="All trials" closable="no"  x="10" y="30"  width="200" height="200">
	<scrollView>
	 <tableView usesAlternatingRowBackgroundColors="yes" valueBinding="trials_controller">
		<tableColumn identifier="id" title="bar"/>
		<tableColumn identifier="name" title="foo"/>
	 </tableView>
	</scrollView>
  </window>
  <window title="Patch compos" closable="no"  x="10" y="250" width="200" height="200">
	<scrollView>
	 <tableView usesAlternatingRowBackgroundColors="yes" valueBinding="compos_controller" target="#CPOwner" doubleAction="loadCompo:">
		<tableColumn identifier="id" title="id"/>
		<tableColumn identifier="name" title="name"/>
	 </tableView>
	</scrollView>
  </window>
  <window title="Images" closable="no"  x="250" y="30" width="200" height="600">
	<scrollView>
	 <tableView usesAlternatingRowBackgroundColors="yes" valueBinding="images_controller" target="#CPOwner" doubleAction="loadImage:">
		<tableColumn identifier="id" title="id"/>
		<tableColumn identifier="filename" title="filename"/>
		<tableColumn identifier="name" title="name"/>
	 </tableView>
	</scrollView>
  </window>
  <window title="Inspector" HUD="yes" closable="yes" x="600" y="30" width="200" height="200">
     <vbox>
      <box title="ID" valign="center">
        <textField valueBinding="compos_controller.selection.id"></textField>
      </box>
      <box title="Name">
        <textField valueBinding="compos_controller.selection.name"></textField>
      </box>
	  <textField valueBinding="compos_controller.selection.trial.name"></textField>
    </vbox>
  </window>

   <arrayController id="trials_controller" entity="trials" autoFetch="YES"/>
   <arrayController id="compos_controller" entity="patch_compositions" valueBinding ="trials_controller.selection.compos"/>
   <arrayController id="images_controller" entity="patch_compositions" valueBinding ="trials_controller.selection.images"/>

  <menu type="main">
  	<menu title="Edit">
		<menuItem title="Delete" action="removeObject:" keyEquivalent="r"/>
		<menuItem title="Cut" action="cut:" keyEquivalent="x"/>
		<menuItem title="Copy" action="copy:" keyEquivalent="c"/>
		<menuItem title="Paste" action="paste:" keyEquivalent="v"/>
		<menuItem title="Select all" action="selectAll:" keyEquivalent="a"/>
     </menu>
   </menu>

</objects>

<entities>
	<entity id="trials" store="#CPOwner.store">
		<column name="id" primaryKey="YES"/>
		<column name="name"/>
		<relationship name="compos" type="toMany" target="patch_compositions" targetColumn="idtrials"/>
		<relationship name="images" type="toMany" target="images" targetColumn="idtrial"/>
	</entity>
	<entity id="patch_compositions" store="#CPOwner.store">
		<column name="id" primaryKey="YES"/>
		<column name="idtrials"/>
		<column name="name"/>
		<relationship type="toOne" name="trial" bindingColumn="idtrials" target="trials"/>
		<relationship name="chains" type="toMany" target="patch_chains" targetColumn="idpatch_composition"/>
		<relationship name="inputParams" type="toMany" target="composition_interactive_parameters" targetColumn="idpatch_composition"/>
	</entity>
	<entity id="patch_chains" store="#CPOwner.store">
		<column name="id" primaryKey="YES"/>
		<column name="idpatch_composition"/>
		<column name="name"/>
		<relationship name="patches" type="toMany" target="patches" targetColumn="idpatch_chain"/>
	</entity>
	<entity id="patches" store="#CPOwner.store">
		<column name="id" primaryKey="YES"/>
		<column name="idpatch_chain"/>
		<column name="idpatch"/>
		<relationship type="toOne" name="patch" bindingColumn="idpatch" target="patch_repository"/>
	</entity>
	<entity id="patch_repository" store="#CPOwner.store">
		<column name="id" primaryKey="YES"/>
		<column name="type"/>
		<column name="name"/>
	</entity>
	<entity id="composition_interactive_parameters" store="#CPOwner.store">
		<column name="idinput" primaryKey="YES"/>
		<column name="patch"/>
		<column name="idpatch_composition"/>
		<column name="name"/>
		<column name="type"/>
		<column name="value"/>
		<column name="range1"/>
		<column name="range2"/>
		<column name="disabled"/>
		<column name="idparameter"/>
	</entity>
	<entity id="images" store="#CPOwner.store">
		<column name="id" primaryKey="YES"/>
		<column name="idtrial"/>
		<column name="name"/>
		<column name="filename"/>
		<relationship type="toOne" name="trial" bindingColumn="idtrials" target="trials"/>
	</entity>
</entities>

<connectors>
	<outlet source="#CPOwner" target="images_controller" label="#imagesController"/>
	<outlet source="#CPOwner" target="compos_controller" label="#composController"/>
</connectors>

</gsmarkup>